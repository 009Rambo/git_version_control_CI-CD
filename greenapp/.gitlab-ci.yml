stages:
  - test
  - build
  - deploy

cache:
  key: npm
  policy: pull-push
  paths:
    - .npm/
    - build/

##
# Frontend
##

test_frontend:
  stage: test
  image: node:slim
  script:
    - echo "Test stage"
    - npm ci --cache .npm --prefer-offline
    - CI=true npm test

build_frontend:
  stage: build
  image: node:slim
  script:
    - echo "Build frontend"
    - npm ci --cache .npm --prefer-offline
    - npm run build
    - ls build

deploy_frontend:
  stage: deploy
  script:
    - echo "Deploy stage"
    - apk update && apk add rsync openssh curl
    # Prepare SSH settings
    - mkdir -p ~/.ssh && (umask 077 ; echo "${DEPLOY_KEY_PRIVATE}" | base64 -d > ~/.ssh/id_rsa)
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    # Transfer to server and run commands
    - rsync -r . "deploy@172.16.6.213:/home/deploy/app"
    # Run commands on the server
    - ssh deploy@172.16.6.213 /bin/bash
      "
      echo 'Stopping port 3000';
      docker ps --filter 'publish=3000' -q | xargs -r docker stop;
      echo 'Removing stopped containers';
      docker ps -a --filter 'publish=3000' -q | xargs -r docker rm;
      echo 'Starting new deployment';
      cd ~/app;
      docker build -t our_nice_api .;
      docker run -d -p 3000:3000 our_nice_api;
      "

